name: Node Action (top-level)

on:
  workflow_dispatch:
  push:
jobs:
  action-success:
    runs-on: self-hosted
    steps:
      - uses: fhammerl/canary/node-pre-post-on-success@main
        id: action-success
      - run: echo "${{ github.job }}"
      - run: echo "${{ github.run_id }}"

  action-success-check:
    runs-on: self-hosted
    needs: action-success
    steps:
      - run: echo "${{ github.job }}"
      - run: echo "${{ github.run_id }}"
      
      - uses: actions/github-script@v5
        with:
          script: |
          const run_id = ${{ github.run_id }};
          async function getSuccessJobIdFromRunId(run_id) {
              return await octokit.request('GET /repos/{owner}/{repo}/actions/runs/{run_id}/jobs', {
                  owner: 'fhammerl',
                  repo: 'canary',
                  run_id
              })
          }

          async function getJobLogs(job_id) {
              return await octokit.rest.actions.downloadJobLogsForWorkflowRun({
                  owner: 'fhammerl',
                  repo: 'canary',
                  job_id
              })
          }

          getSuccessJobIdFromRunId(run_id).then(response => {
              const job_id = response.data.jobs.filter(job => job.name == "action-success")[0].id;
              getJobLogs(job_id).then(logs => {
                  console.log(logs.data.split(/\r?\n/).filter(line => line.indexOf("PRE-STEP-COMPLETE") != -1));
                  console.log(logs.data.split(/\r?\n/).filter(line => line.indexOf("MAIN-STEP-COMPLETE")!= -1));
                  console.log(logs.data.split(/\r?\n/).filter(line => line.indexOf("POST-STEP-COMPLETE")!= -1));
              });
          });
